[{"C:\\Users\\amf7c\\Programming\\QEC2021\\QEC-2021\\Client\\src\\index.js":"1","C:\\Users\\amf7c\\Programming\\QEC2021\\QEC-2021\\Client\\src\\App.js":"2","C:\\Users\\amf7c\\Programming\\QEC2021\\QEC-2021\\Client\\src\\reportWebVitals.js":"3","C:\\Users\\amf7c\\Programming\\QEC2021\\QEC-2021\\Client\\src\\Components\\About.js":"4"},{"size":517,"mtime":1610817667766,"results":"5","hashOfConfig":"6"},{"size":10666,"mtime":1610831072738,"results":"7","hashOfConfig":"6"},{"size":375,"mtime":1610817667767,"results":"8","hashOfConfig":"6"},{"size":838,"mtime":1610831703720,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"afjgp3",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\amf7c\\Programming\\QEC2021\\QEC-2021\\Client\\src\\index.js",[],["20","21"],"C:\\Users\\amf7c\\Programming\\QEC2021\\QEC-2021\\Client\\src\\App.js",["22"],"import './App.css';\r\nimport React, {Component} from \"react\";\r\nimport About from \"./Components/About\";\r\n\r\n\r\nclass App extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      chequingAndSavings: {\r\n        chequing: \"\",\r\n        savings: \"\"\r\n      },\r\n      income: {\r\n        homeMoney: {\r\n          value: \"\",\r\n          type: \"\"\r\n        },\r\n        loans: {\r\n          value: \"\",\r\n          type: \"\"\r\n        },\r\n        scholarships: {\r\n          value: \"\",\r\n          type: \"\"\r\n        },\r\n        salary: {\r\n          value: \"\",\r\n          type: \"\"\r\n        },\r\n      },\r\n      expenses: {\r\n        rent: {\r\n          value: \"\",\r\n          type: \"\"\r\n        },\r\n        food: {\r\n          value: \"\",\r\n          type: \"\"\r\n        },\r\n        tuition: {\r\n          value: \"\",\r\n          type: \"\"\r\n        },\r\n        savings: {\r\n          value: \"\",\r\n          type: \"\"\r\n        },\r\n        carPayments: {\r\n          value: \"\",\r\n          type: \"\"\r\n        },\r\n        carInsurance: {\r\n          value: \"\",\r\n          type: \"\"\r\n        },\r\n        utilities: {\r\n          value: \"\",\r\n          type: \"\"\r\n        },\r\n        internet: {\r\n          value: \"\",\r\n          type: \"\"\r\n        },\r\n        entertainment: {\r\n          value: \"\",\r\n          type: \"\"\r\n        }\r\n      },\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state)\r\n\r\n    const sendData = event => {\r\n      event.preventDefault();\r\n\r\n      fetch('http://kingston.andrewfryer.ca:3000/data', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(this.state)\r\n      })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        const graph = document.getElementById('tester');\r\n        \r\n        let rent = [655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655];\r\n        let utils = [100, 100, 100, 65, 65, 65, 65, 65, 65, 65, 100, 100, 100];\r\n        let groceries = [300, 390, 300, 220, 70, 150, 120, 100, 370, 250, 290, 350];\r\n        let entertainment = [100, 120, 90, 50, 370, 1000, 300, 100, 200, 90, 50, 500,];\r\n        let tuition = [6700, 0, 0, 0, 500, 0, 0, 0, 6700, 0, 0, 0];\r\n\r\n        let expenses = [rent, utils, groceries, entertainment, tuition];\r\n        let expenses_tot = expenses.reduce(function (r, a) {\r\n          a.forEach(function (b, i) {\r\n              r[i] = (r[i] || 0) + b;\r\n          });\r\n          return r;\r\n        }, []);\r\n\r\n        let income = [100, 100, 100, 100, 3000, 3000, 3000, 3000, 130, 130, 130, 75];;\r\n        let scholarships = [0, 0, 0, 0, 0, 0, 0, 0, 5000, 0, 0, 0];\r\n        let loans = [6540, 0, 0, 0, 0, 0, 0, 0, 6540, 0, 0, 0];\r\n\r\n        let money = [income, scholarships, loans];\r\n        let money_tot = money.reduce(function (r, a) {\r\n          a.forEach(function (b, i) {\r\n              r[i] = (r[i] || 0) + b;\r\n          });\r\n          return r;\r\n        }, []);\r\n\r\n        let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\r\n\r\n        var expensesTrace = {\r\n          x: months,\r\n          y: expenses_tot,\r\n          name: 'Expenses',\r\n          type: 'bar'\r\n        };\r\n        \r\n        var incomeTrace = {\r\n          x: months,\r\n          y: money_tot,\r\n          name: 'Income',\r\n          type: 'bar'\r\n        };\r\n        \r\n        var data = [expensesTrace, incomeTrace];\r\n        \r\n        var layout = {barmode: 'group'};\r\n        \r\n        window.Plotly.newPlot(graph, data, layout);\r\n      });\r\n    }\r\n\r\n    const dispatch = (props, value) => {\r\n      this.setState(prevState => {\r\n        let obj = prevState;\r\n        while(props.length > 1) {\r\n          obj = obj[props.shift()];\r\n        }\r\n        obj[props.pop()] = value;\r\n        return prevState;\r\n      });\r\n    }\r\n\r\n    const buildHandler = props => (e => dispatch(props, e.target.value));\r\n\r\n    return (    \r\n      <div className=\"App\">\r\n      <div className=\"form\">\r\n        <div className=\"topping\">\r\n        <header>\r\n          <h1>Name of Website</h1>\r\n          <p>This will be the header</p>\r\n        </header>\r\n        </div>\r\n        <About/>\r\n        <form onSubmit={sendData}>\r\n          <fieldset className=\"today-info\">\r\n            <label className=\"chequing\">Chequing Account Balance:\r\n              <input type=\"text\" placeholder=\"Example: 40000\" onChange={buildHandler([\"chequingAndSavings\", \"chequing\"])}></input>\r\n            </label>\r\n            <label className=\"chequing\">Savings Account Balance:\r\n              <input type=\"text\" placeholder=\"Example: 40000\" onChange={buildHandler([\"chequingAndSavings\", \"savings\"])}></input>\r\n            </label>\r\n          </fieldset>\r\n          <fieldset className=\"income\">\r\n          <div>\r\n            <label className=\"money\">Money (from home):\r\n              <input type=\"number\" placeholder=\"Example: 420000\" onChange={buildHandler([\"income\", \"homeMoney\", \"value\"])}></input>\r\n            </label>\r\n            <label className=\"money\">Units: \r\n              <input type=\"text\" placeholder=\"Example: Yearly, Semester, Monthly\" onChange={buildHandler([\"income\", \"homeMoney\", \"type\"])}></input>\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label className=\"loan\">Loans:\r\n              <input type=\"number\" placeholder=\"Example: 420000\" onChange={buildHandler([\"income\", \"loans\", \"value\"])}></input>\r\n            </label>\r\n            <label className=\"loan\">Units: \r\n              <input type=\"text\" placeholder=\"Example: Yearly, Semester, Monthly\" onChange={buildHandler([\"income\", \"loans\", \"type\"])}></input>\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label className=\"scholarship\">Scholarship Amounts (total):\r\n              <input type=\"number\" placeholder=\"Example: 420000\" onChange={buildHandler([\"income\", \"scholarships\", \"value\"])}></input>\r\n            </label>\r\n            <label className=\"scholarship\">Units: \r\n              <input type=\"text\" placeholder=\"Example: Yearly, Semester, Monthly\" onChange={buildHandler([\"income\", \"scholarships\", \"type\"])}></input>\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label className=\"salary\">Job Salary:\r\n              <input type=\"number\" placeholder=\"Example: 420000\" onChange={buildHandler([\"income\", \"salary\", \"value\"])}></input>\r\n            </label>\r\n            <label className=\"salary\">Units: \r\n              <input type=\"text\" placeholder=\"Example: Yearly, Semester, Monthly\" onChange={buildHandler([\"income\", \"salary\", \"type\"])}></input>\r\n            </label>\r\n          </div>\r\n          </fieldset>\r\n          <fieldset>\r\n            <label className=\"rent\">Rent:\r\n              <input type=\"number\" placeholder=\"Example: 420000\" onChange={buildHandler([\"expenses\", \"rent\", \"value\"])}></input>\r\n            </label>\r\n            <label className=\"rent\">Units: \r\n              <input type=\"text\" placeholder=\"Example: Yearly, Semester, Monthly\" onChange={buildHandler([\"expenses\", \"rent\", \"type\"])}></input>\r\n            </label>\r\n            <label className=\"food\">Food (average):\r\n              <input type=\"number\" placeholder=\"Example: 420000\" onChange={buildHandler([\"expenses\", \"food\", \"value\"])}></input>\r\n            </label>\r\n            <label className=\"food\">Units: \r\n              <input type=\"text\" placeholder=\"Example: Yearly, Semester, Monthly\" onChange={buildHandler([\"expenses\", \"food\", \"type\"])}></input>\r\n            </label>\r\n            <label className=\"tuition\">Tutition:\r\n              <input type=\"number\" placeholder=\"Example: 420000\" onChange={buildHandler([\"expenses\", \"tuition\", \"value\"])}></input>\r\n            </label>\r\n            <label className=\"tuition\">Units: \r\n              <input type=\"text\" placeholder=\"Example: Yearly, Semester, Monthly\" onChange={buildHandler([\"expenses\", \"tuition\", \"type\"])}></input>\r\n            </label>\r\n            <label className=\"savings\">Savings:\r\n              <input type=\"number\" placeholder=\"Example: 420000\" onChange={buildHandler([\"expenses\", \"rent\", \"value\"])}></input>\r\n            </label>\r\n            <label className=\"savings\">Units: \r\n              <input type=\"text\" placeholder=\"Example: Yearly, Semester, Monthly\" onChange={buildHandler([\"expenses\", \"rent\", \"type\"])}></input>\r\n            </label>\r\n            <label className=\"car\">Car Payments:\r\n              <input type=\"number\" placeholder=\"Example: 420000\" onChange={buildHandler([\"expenses\", \"carPayments\", \"value\"])}></input>\r\n            </label>\r\n            <label className=\"car\">Units: \r\n              <input type=\"text\" placeholder=\"Example: Yearly, Semester, Monthly\" onChange={buildHandler([\"expenses\", \"carPayments\", \"type\"])}></input>\r\n            </label>\r\n            <label className=\"insurance-car\">Car Insurance:\r\n              <input type=\"number\" placeholder=\"Example: 420000\" onChange={buildHandler([\"expenses\", \"carInsurance\", \"value\"])}></input>\r\n            </label>\r\n            <label className=\"insurance-car\">Units: \r\n              <input type=\"text\" placeholder=\"Example: Yearly, Semester, Monthly\" onChange={buildHandler([\"expenses\", \"carInsurance\", \"type\"])}></input>\r\n            </label>\r\n            <label className=\"utilities\">Utilities (average):\r\n              <input type=\"number\" placeholder=\"Example: 420000\" onChange={buildHandler([\"expenses\", \"utilities\", \"value\"])}></input>\r\n            </label>\r\n            <label className=\"utilities\">Units: \r\n              <input type=\"text\" placeholder=\"Example: Yearly, Semester, Monthly\" onChange={buildHandler([\"expenses\", \"utilities\", \"type\"])}></input>\r\n            </label>\r\n            <label className=\"internet\">Internet:\r\n              <input type=\"number\" placeholder=\"Example: 420000\" onChange={buildHandler([\"expenses\", \"internet\", \"value\"])}></input>\r\n            </label>\r\n            <label className=\"internet\">Units: \r\n              <input type=\"text\" placeholder=\"Example: Yearly, Semester, Monthly\" onChange={buildHandler([\"expenses\", \"internet\", \"type\"])}></input>\r\n            </label>\r\n            <label className=\"rent\">Entertainment:\r\n              <input type=\"entertainment\" placeholder=\"Example: 420000\" onChange={buildHandler([\"expenses\", \"entertainment\", \"value\"])}></input>\r\n            </label>\r\n            <label className=\"entertainment\">Units: \r\n              <input type=\"text\" placeholder=\"Example: Yearly, Semester, Monthly\" onChange={buildHandler([\"expenses\", \"entertainment\", \"type\"])}></input>\r\n            </label>\r\n          </fieldset>\r\n          <input type=\"submit\" value=\"Submit\"/>\r\n        </form>\r\n      </div>\r\n    </div>\r\n   \r\n);\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\amf7c\\Programming\\QEC2021\\QEC-2021\\Client\\src\\reportWebVitals.js",[],"C:\\Users\\amf7c\\Programming\\QEC2021\\QEC-2021\\Client\\src\\Components\\About.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":134,"column":13,"nodeType":"29","messageId":"30","endLine":134,"endColumn":17},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-redeclare","'data' is already defined.","Identifier","redeclared","no-global-assign","no-unsafe-negation"]